{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solov\\\\Desktop\\\\\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C\\\\store\\\\client\\\\src\\\\pages\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from '../components/TypeBar';\nimport TroublescoreBar from '../components/TroublescoreBar';\nimport ServiceList from '../components/ServiceList';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { fetchTroublescores, fetchTypes, fetchServices } from '../http/serviceAPI';\nimport Pages from '../components/Pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    service\n  } = useContext(Context);\n  useEffect(() => {\n    fetchTypes().then(data => service.setTypes(data));\n    fetchTroublescores().then(data => service.setTroublescores(data));\n    fetchServices(null, null, 1, 2).then(data => {\n      service.setServices(data.rows);\n      service.setTotalCount(data.count);\n    });\n  });\n  useEffect(() => {\n    fetchServices(service.selectedType.id, service.selectedTroublescore.id, service.page, 2).then(data => {\n      service.setServices(data.rows);\n      service.setTotalCount(data.count);\n    });\n  }, [service.page, service.selectedType, service.selectedTroublescore]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(TroublescoreBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ServiceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}, \"UDc/5HGSO7ZWB/yO+Vo93s9aKt8=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["C:/Users/solov/Desktop/диплом/store/client/src/pages/Shop.js"],"names":["React","useContext","useEffect","Container","Row","Col","TypeBar","TroublescoreBar","ServiceList","observer","Context","fetchTroublescores","fetchTypes","fetchServices","Pages","Shop","service","then","data","setTypes","setTroublescores","setServices","rows","setTotalCount","count","selectedType","id","selectedTroublescore","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAAUC,SAAV,QAA2B,iBAA3B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,EAAyCC,aAAzC,QAA8D,oBAA9D;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,IAAI,GAAGN,QAAQ,SAAC,MAAM;AAAA;;AAE1B,QAAM;AAACO,IAAAA;AAAD,MAAYf,UAAU,CAACS,OAAD,CAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAK;AACbU,IAAAA,UAAU,GAAGK,IAAb,CAAkBC,IAAI,IAAIF,OAAO,CAACG,QAAR,CAAiBD,IAAjB,CAA1B;AACAP,IAAAA,kBAAkB,GAAGM,IAArB,CAA0BC,IAAI,IAAIF,OAAO,CAACI,gBAAR,CAAyBF,IAAzB,CAAlC;AACAL,IAAAA,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,EAAgB,CAAhB,CAAb,CAAgCI,IAAhC,CAAqCC,IAAI,IAAI;AAC3CF,MAAAA,OAAO,CAACK,WAAR,CAAoBH,IAAI,CAACI,IAAzB;AACAN,MAAAA,OAAO,CAACO,aAAR,CAAsBL,IAAI,CAACM,KAA3B;AACD,KAHD;AAID,GAPQ,CAAT;AAUAtB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa,CAACG,OAAO,CAACS,YAAR,CAAqBC,EAAtB,EAA0BV,OAAO,CAACW,oBAAR,CAA6BD,EAAvD,EAA2DV,OAAO,CAACY,IAAnE,EAAyE,CAAzE,CAAb,CAAyFX,IAAzF,CAA8FC,IAAI,IAAI;AACpGF,MAAAA,OAAO,CAACK,WAAR,CAAoBH,IAAI,CAACI,IAAzB;AACAN,MAAAA,OAAO,CAACO,aAAR,CAAsBL,IAAI,CAACM,KAA3B;AACD,KAHD;AAKD,GANQ,EAMN,CAACR,OAAO,CAACY,IAAT,EAAeZ,OAAO,CAACS,YAAvB,EAAqCT,OAAO,CAACW,oBAA7C,CANM,CAAT;AASA,sBAEI,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAG,CAAV;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAG,CAAV;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBD,CAvCoB,kCAArB;MAAMZ,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport {  Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from '../components/TypeBar';\r\nimport TroublescoreBar from '../components/TroublescoreBar';\r\nimport ServiceList from '../components/ServiceList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchTroublescores, fetchTypes, fetchServices } from '../http/serviceAPI';\r\nimport Pages from '../components/Pages';\r\n\r\nconst Shop = observer(() => {\r\n\r\n  const {service} = useContext(Context)\r\n\r\n  useEffect(() =>{\r\n    fetchTypes().then(data => service.setTypes(data))\r\n    fetchTroublescores().then(data => service.setTroublescores(data))\r\n    fetchServices(null, null, 1, 2).then(data => {\r\n      service.setServices(data.rows)\r\n      service.setTotalCount(data.count)\r\n    })\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    fetchServices(service.selectedType.id, service.selectedTroublescore.id, service.page, 2).then(data => {\r\n      service.setServices(data.rows)\r\n      service.setTotalCount(data.count)\r\n    })\r\n\r\n  }, [service.page, service.selectedType, service.selectedTroublescore])\r\n\r\n\r\n  return (\r\n    \r\n      <Container>\r\n        <Row className = \"mt-2\">\r\n          <Col md ={3}>\r\n              <TypeBar/>\r\n          </Col>\r\n          <Col md ={9}>\r\n              <TroublescoreBar/>\r\n              <ServiceList/>\r\n              <Pages/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    \r\n  );\r\n});\r\n\r\nexport default Shop;\r\n"]},"metadata":{},"sourceType":"module"}