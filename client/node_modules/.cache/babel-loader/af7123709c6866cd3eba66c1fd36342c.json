{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solov\\\\Desktop\\\\online-store-course\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup } from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}, \"7NqvmAVKlrxWo1mWsul1uXNUccI=\"));\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"sources":["C:/Users/solov/Desktop/online-store-course/client/src/components/TypeBar.js"],"names":["React","useContext","observer","Context","ListGroup","TypeBar","device","types","map","type","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,SAAR,QAAwB,2BAAxB;;AAEA,MAAMC,OAAO,GAAGH,QAAQ,SAAE,MAAM;AAAA;;AAC5B,QAAM;AAACI,IAAAA;AAAD,MAAWL,UAAU,CAACE,OAAD,CAA3B;AACF,sBAEE,QAAC,SAAD;AAAA,cACKG,MAAM,CAACC,KAAP,CAAaC,GAAb,CAAiBC,IAAI,iBACd,QAAC,SAAD,CAAW,IAAX;AAAA,gBACKA,IAAI,CAACC;AADV,OAAqBD,IAAI,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA,YADP;AADL;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CAZuB,kCAAxB;MAAMN,O;AAcN,eAAeA,OAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {ListGroup} from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer( () => {\r\n    const {device} = useContext(Context)\r\n  return (\r\n    \r\n    <ListGroup>\r\n        {device.types.map(type =>\r\n                <ListGroup.Item key={type.id}>\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            ) }\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nexport default TypeBar;\r\n"]},"metadata":{},"sourceType":"module"}