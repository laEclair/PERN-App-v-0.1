{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solov\\\\Desktop\\\\\\u0434\\u0438\\u043F\\u043B\\u043E\\u043C\\\\store\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    service\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: service.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: 'pointer'\n      },\n      active: type.id === service.selectedType.id,\n      onClick: () => service.setSelectedType(type),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}, \"4tCv0gjOik/ReQHgClDRRhuX3V8=\"));\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"sources":["C:/Users/solov/Desktop/диплом/store/client/src/components/TypeBar.js"],"names":["React","useContext","observer","Context","ListGroup","TypeBar","service","types","map","type","cursor","id","selectedType","setSelectedType","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,OAAO,GAAGH,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAM;AAACI,IAAAA;AAAD,MAAYL,UAAU,CAACE,OAAD,CAA5B;AACA,sBACI,QAAC,SAAD;AAAA,cACKG,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBC,IAAI,iBACnB,QAAC,SAAD,CAAW,IAAX;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OADX;AAEI,MAAA,MAAM,EAAED,IAAI,CAACE,EAAL,KAAYL,OAAO,CAACM,YAAR,CAAqBD,EAF7C;AAGI,MAAA,OAAO,EAAE,MAAML,OAAO,CAACO,eAAR,CAAwBJ,IAAxB,CAHnB;AAAA,gBAMKA,IAAI,CAACK;AANV,OAISL,IAAI,CAACE,EAJd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhBuB,kCAAxB;MAAMN,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {service} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {service.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === service.selectedType.id}\r\n                    onClick={() => service.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;"]},"metadata":{},"sourceType":"module"}