[{"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\index.js":"1","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\App.js":"2","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\store\\UserStore.js":"3","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\store\\ServiceStore.js":"4","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\AppRouter.js":"5","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\NavBar.js":"6","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\userAPI.js":"7","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\routes.js":"8","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\index.js":"9","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\utils\\consts.js":"10","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\ServicePage.js":"11","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Auth.js":"12","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Shop.js":"13","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Basket.js":"14","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Admin.js":"15","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\serviceAPI.js":"16","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\ServiceList.js":"17","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\TroublescoreBar.js":"18","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\TypeBar.js":"19","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateType.js":"20","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateTroublescore.js":"21","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateService.js":"22","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\ServiceItem.js":"23","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\Pages.js":"24"},{"size":478,"mtime":1627731513791,"results":"25","hashOfConfig":"26"},{"size":860,"mtime":1633018048472,"results":"27","hashOfConfig":"26"},{"size":566,"mtime":1628328956928,"results":"28","hashOfConfig":"26"},{"size":1743,"mtime":1633024344814,"results":"29","hashOfConfig":"26"},{"size":799,"mtime":1626172948846,"results":"30","hashOfConfig":"26"},{"size":1494,"mtime":1628331747053,"results":"31","hashOfConfig":"26"},{"size":712,"mtime":1628330513928,"results":"32","hashOfConfig":"26"},{"size":827,"mtime":1621151308761,"results":"33","hashOfConfig":"26"},{"size":426,"mtime":1627734073687,"results":"34","hashOfConfig":"26"},{"size":234,"mtime":1626172165621,"results":"35","hashOfConfig":"26"},{"size":2131,"mtime":1629117593321,"results":"36","hashOfConfig":"26"},{"size":2915,"mtime":1633012031880,"results":"37","hashOfConfig":"26"},{"size":1632,"mtime":1633029505122,"results":"38","hashOfConfig":"26"},{"size":133,"mtime":1621147284275,"results":"39","hashOfConfig":"26"},{"size":1661,"mtime":1628776547716,"results":"40","hashOfConfig":"26"},{"size":1222,"mtime":1633023440715,"results":"41","hashOfConfig":"26"},{"size":529,"mtime":1633013204369,"results":"42","hashOfConfig":"26"},{"size":940,"mtime":1622801343255,"results":"43","hashOfConfig":"26"},{"size":741,"mtime":1633022606392,"results":"44","hashOfConfig":"26"},{"size":1313,"mtime":1633012552322,"results":"45","hashOfConfig":"26"},{"size":1351,"mtime":1633022420463,"results":"46","hashOfConfig":"26"},{"size":5802,"mtime":1633022371216,"results":"47","hashOfConfig":"26"},{"size":922,"mtime":1633013297691,"results":"48","hashOfConfig":"26"},{"size":853,"mtime":1633024698874,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6hi4x1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\index.js",[],["104","105"],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\App.js",["106"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\store\\UserStore.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\store\\ServiceStore.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\NavBar.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\userAPI.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\routes.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\index.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\utils\\consts.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\ServicePage.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Auth.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Shop.js",["107","108"],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Basket.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\pages\\Admin.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\http\\serviceAPI.js",["109"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createTroublescore = async (troublescore) => {\r\n    const {data} = await $authHost.post('api/troublescore', troublescore)\r\n    return data\r\n}\r\n\r\nexport const fetchTroublescores = async () => {\r\n    const {data} = await $host.get('api/troublescore')\r\n    return data\r\n}\r\n\r\nexport const createService = async (service) => {\r\n    const {data} = await $authHost.post('api/service', service)\r\n    return data\r\n}\r\n\r\nexport const fetchServices = async (typeId, troublescoreId, page, limit = 8) => {\r\n    const {data} = await $host.get('api/service', {params: {\r\n        typeId, troublescoreId, page, limit \r\n    }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneService = async (id) => {\r\n    const {data} = await $host.get('api/service/' + id)\r\n    return data\r\n}\r\n\r\nexport const fetchDeleteServices = async (id) => {\r\n    const {data} = await $host.delete('api/service/' + id)\r\n    return data\r\n}","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\ServiceList.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\TroublescoreBar.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateTroublescore.js",["110"],"import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport  {Button}  from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { createTroublescore, createType } from '../../http/serviceAPI';\r\n\r\nconst CreateTroublescore = ({show, onHide}) => {\r\n\r\n  const [value, setValue] = useState('')\r\n\r\n    const addTroublescore = () => {\r\n        createTroublescore({name: value}).then(data => {\r\n          setValue('')\r\n          onHide()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        \r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Добавить сложность\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Control\r\n           value = {value}\r\n           onChange = {e => setValue(e.target.value)}\r\n            placeholder={\"Введите название типа\"}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n          <Button variant=\"outline-success\" onClick={addTroublescore}>Добавить</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n       \r\n    );\r\n};\r\n\r\nexport default CreateTroublescore;","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\modals\\CreateService.js",["111","112"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport  {Button, Dropdown}  from 'react-bootstrap';\r\nimport { Form,Row,Col } from 'react-bootstrap';\r\nimport {Context} from \"../../index\";\r\nimport { createService, fetchTroublescores, fetchTypes, fetchServices } from '../../http/serviceAPI';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst CreateService = observer(({show, onHide}) => {\r\n    const {service} = useContext(Context)\r\n    const [name, setName] = useState ('')\r\n    const [price, setPrice] = useState (0)\r\n    const [file, setFile] = useState (null)\r\n    \r\n    const [info, setInfo] = useState ([])\r\n\r\n    useEffect(() =>{\r\n      fetchTypes().then(data => service.setTypes(data))\r\n      fetchTroublescores().then(data => service.setTroublescores(data))\r\n    }, [])\r\n\r\n\r\n  \r\n    const addInfo = () => {\r\n      setInfo([...info, {title: '', description: '', number : Date.now()}])\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n      setInfo(info.filter(i => i.number !== number))\r\n    }\r\n\r\n      const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value}: i))\r\n      }\r\n\r\n\r\n    const selectFile = e => {\r\n      setFile(e.target.files[0])\r\n    }\r\n    \r\n    const addService = () => {\r\n      const formData = new FormData()\r\n      formData.append('name', name)\r\n      formData.append('price', `${price}`)\r\n      formData.append('img', file)\r\n      formData.append('troublescoreId', service.selectedTroublescore.id)\r\n      formData.append('typeId', service.selectedType.id)\r\n      formData.append('info', JSON.stringify(info))\r\n      createService(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        \r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Добавить услугу\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Dropdown className=\"mt-2 mb-2\">\r\n\r\n              <Dropdown.Toggle>{service.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {service.types.map(type =>\r\n                  <Dropdown.Item  \r\n                  onClick = {() => service.setSelectedType(type)} \r\n                  key = {type.id}\r\n                  \r\n                  > \r\n                  \r\n                     {type.name}\r\n                  </Dropdown.Item>\r\n                  )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown className=\"mt-2 mb-2\">\r\n              <Dropdown.Toggle>{service.selectedTroublescore.name || \"Выберите сложность\"}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {service.troublescores.map(troublescore =>\r\n                  <Dropdown.Item onClick = {() => service.setSelectedTroublescore(troublescore)} key = {troublescore.id}> {troublescore.name}</Dropdown.Item>\r\n                  )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n\r\n                <Form.Control\r\n                value = {name}\r\n                onChange = {e => setName(e.target.value)}\r\n                  className=\"mt-3\"\r\n                  placeholder=\"Введите название услуги\"\r\n                />\r\n\r\n                 <Form.Control\r\n                 value = {price}\r\n                 onChange = {e => setPrice(Number(e.target.value))}\r\n                  className=\"mt-3\"\r\n                  placeholder=\"Введите стоимость услуги\"\r\n                  type=\"number\"\r\n                />\r\n\r\n                <Form.Control\r\n                  className=\"mt-3\"\r\n                  type=\"file\"\r\n                  onChange = {selectFile}\r\n                />\r\n                <hr/>\r\n                  <Button\r\n                    variant={\"outline-dark\"}\r\n                    onClick={addInfo}\r\n                  >\r\n                    Добавить новое свойство\r\n                  </Button>\r\n\r\n                  {info.map(i => \r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                              <Form.Control\r\n                                value = {i.title}\r\n                                onChange = {(e) => changeInfo('title', e.target.value, i.number)}\r\n                                placeholder=\"Введите название области услуги\"\r\n                              />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <Form.Control\r\n                                value = {i.description}\r\n                                onChange = {(e) => changeInfo('description', e.target.value, i.number)}\r\n                               placeholder=\"Введите описание услуги\"\r\n                              />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                             <Button \r\n                              onClick={()=> removeInfo(i.number)}\r\n                              variant={\"outline-danger\"}>\r\n                               Удалить\r\n                              </Button>\r\n                            </Col>\r\n                        </Row>\r\n                      )\r\n                  }\r\n\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n          <Button variant=\"outline-success\" onClick={addService}>Добавить</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n       \r\n    );\r\n});\r\n\r\nexport default CreateService;","C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\ServiceItem.js",[],"C:\\Users\\solov\\Desktop\\диплом\\store\\client\\src\\components\\Pages.js",["113"],"import React, { useContext } from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport { Context } from '../index';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport totalCount from '../store/ServiceStore';\r\n\r\nconst Pages = observer(() => {\r\n    const {service} = useContext(Context)\r\n    const pageCount = Math.ceil(service.totalCount / service.limit)\r\n    const pages = []\r\n\r\n    for(let i = 0; i < pageCount; i++){\r\n        pages.push(i + 1)\r\n    }\r\n\r\n    return(\r\n    <Pagination className = \"mt-3\">\r\n        {pages.map(page =>\r\n            <Pagination.Item\r\n                key = {page}\r\n                active = {service.page === page }\r\n                onClick={() => service.setPage(page)}\r\n            >\r\n                {page}\r\n            </Pagination.Item>\r\n            )}\r\n    </Pagination>\r\n    );\r\n});\r\n\r\nexport default Pages;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":24,"column":6,"nodeType":"120","endLine":24,"endColumn":8,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"122","line":35,"column":6,"nodeType":"120","endLine":35,"endColumn":72,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":5,"column":30,"nodeType":"127","messageId":"128","endLine":5,"endColumn":40},{"ruleId":"125","severity":1,"message":"130","line":6,"column":57,"nodeType":"127","messageId":"128","endLine":6,"endColumn":70},{"ruleId":"118","severity":1,"message":"122","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"131"},{"ruleId":"125","severity":1,"message":"132","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'service'. Either include it or remove the dependency array.",["136"],["137"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","'createType' is defined but never used.","'fetchServices' is defined but never used.",["138"],"'totalCount' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},"Update the dependencies array to be: [user]",{"range":"146","text":"147"},"Update the dependencies array to be: [service]",{"range":"148","text":"149"},"Update the dependencies array to be: [service.page, service.selectedType, service.selectedTroublescore, service]",{"range":"150","text":"151"},{"range":"152","text":"149"},[641,643],"[user]",[948,950],"[service]",[1190,1256],"[service.page, service.selectedType, service.selectedTroublescore, service]",[838,840]]